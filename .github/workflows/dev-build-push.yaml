name: Build and Push Docker Image to dev environment

on:
  push:
    paths-ignore:
      - 'kube/**'
      - 'github/**'
    branches:
      - development

jobs:
  test-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      # Aqui você pode incluir os passos específicos para testar o app/fastify

  security-tests:
    needs: test-app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run Trivy vulnerability scanner on project dependencies
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          exit-code: '1'
          trivy-config: trivy-hml.yaml

  build-image:
    needs: security-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ github.repository }}:${{ github.ref_name }}

  push-and-notify:
    # needs: image-security-tests
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.ref_name }}

      - name: Send Telegram Notification
        if: ${{ always() }}
        env:
          TELEGRAM_TOKEN: ${{ secrets.MAIN_CHATOPS_TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.MAIN_CHATOPS_TELEGRAM_CHAT_ID }}
        run: |
          if [[ "${{ job.status }}" == "success" ]]; then
            MESSAGE="✅ Sucesso: O workflow 'Build and Push' foi concluído com sucesso!"
          else
            MESSAGE="⚠️ Atenção: O workflow 'Build and Push' falhou. Verifique para mais detalhes."
          fi
          curl -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" -d chat_id=${CHAT_ID} -d parse_mode="Markdown" -d text="${MESSAGE}"
